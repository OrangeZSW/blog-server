package ${package.Controller};


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

@Resource
private ${table.serviceName} ${table.entityPath}Service;

/**
 * 新增和修改
 * @param ${table.entityPath} 实体对象
 * @return Result
 */
@PostMapping
public boolean save(@RequestBody ${entity} ${table.entityPath}) {
        return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        }

/**
* 根据id删除
* @param id 主键id
* @return boolean
*/
@DeleteMapping("/{id}")
public boolean deleteById(@PathVariable Integer id) {
        return ${table.entityPath}Service.removeById(id);
        }

/**
 * 查询所有
 * @return List<${entity}>
 */
@GetMapping
public List<${entity}> findAll() {
        return ${table.entityPath}Service.list();
        }

/**
 * 根据id查询
 * @param id 主键id
 * @return ${entity}
 */
@GetMapping("/{id}")
public ${entity} findById(@PathVariable Integer id) {
        return ${table.entityPath}Service.getById(id);
        }

/**
 * 分页查询
 * @param pageNum 当前页
 * @param pageSize 每页显示的条数
 * @return Page<${entity}>
 */
@GetMapping("/page")
public Page<${entity}> findPage(@RequestParam Integer pageNum, @RequestParam Integer pageSize) {
        QueryWrapper<${entity}> wrapper=new QueryWrapper<>();
        return ${table.entityPath}Service.page(new Page<>(pageNum, pageSize), wrapper);
        }

/**
* 批量删除
* @param ids 主键id集合
* @return boolean
*/
@DeleteMapping("del/batch")
public boolean deleteBatchById(@RequestBody List<Integer> ids) {
        return ${table.entityPath}Service.removeBatchByIds(ids);
        }


        }

#end
